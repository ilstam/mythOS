[env]
TARGET = "aarch64-unknown-none-softfloat"
TOOLCHAIN_PREFIX = "aarch64-none-elf"
ELF_BINARY = "target/${TARGET}/debug/mythos"
DISK_IMAGE = "target/${TARGET}/debug/kernel8.img"
FEATURES = "qemu"

[env.rpi3]
FEATURES = ""

[tasks.install-dependencies]
script = '''
rustup target add ${TARGET}
cargo install cargo-binutils
rustup component add llvm-tools-preview
'''

[tasks.clean]
command = "cargo"
args = ["clean"]

[tasks.build]
env = { "RUSTFLAGS" = "-C link-args=-Lsrc -C link-args=-Tsrc/kernel.ld" }
command = "cargo"
args = ["build", "--features", "${FEATURES}", "--target=${TARGET}"]

[tasks.clippy]
command = "cargo"
args = ["clippy", "--target=${TARGET}"]

[tasks.fmt]
command = "cargo"
args = ["fmt"]

[tasks.objdump]
command = "${TOOLCHAIN_PREFIX}-objdump"
args = ["-d", "--demangle", "${ELF_BINARY}"]

[tasks.objdump-img]
command = "${TOOLCHAIN_PREFIX}-objdump"
args = ["-D", "--demangle", "-b", "binary", "-m", "aarch64", "${DISK_IMAGE}"]

[tasks.readelf]
command = "${TOOLCHAIN_PREFIX}-readelf"
args = ["-a", "${ELF_BINARY}"]

[tasks.nm]
command = "${TOOLCHAIN_PREFIX}-nm"
args = ["${ELF_BINARY}"]

[tasks.image]
command = "rust-objcopy"
args = ["--strip-all", "-O", "binary", "${ELF_BINARY}", "${DISK_IMAGE}"]
dependencies = ["build"]

[tasks.qemu]
command = "qemu-system-aarch64"
# The first -serial argument corresponds to UART0 (PL011) and the second -serial argument to UART1 (mini UART)
args = ["-M", "raspi3b", "-kernel", "${DISK_IMAGE}", "-serial", "null", "-serial", "stdio", "-display", "none"]
dependencies = ["image"]
